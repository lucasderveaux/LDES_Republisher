@startuml
class ObservationKeeper{
    - simpleValues: Map<string, Map<string, Map<string, SortedMap>>>;
    - featureOfInterests: Map<string, string>;
    - createNewSimpleValue(typeOfSimpleValue):void
    - createNewLocationID(typeOfSimpleValue,day,idLocation):void
    - createNewDay(typeOfsimpleValue,day,idLocation)
    + addSimpleValue(typeOfSimpleValue,idLocation,timestamp,simpleValue)
    + addFeatureOfInterest(IdLocation,versionOf)
}

class GeneralExtractor{
    - config:IConfig
    - keeperOfTheObservations: ObservationKeeper
    + getData(): Promise<void>
    - private analyseData(RDF.quad[]): Promise<void>
}

class IConfig

class Data {
    - config:IConfig
    - keeperOfTheObservations: ObservationKeeper
    - souce: GeneralExtractor
    - dataWriter: DataWriter
    + fetchData():Promise<void>
    + convertData():Promise<void>
    + writeData(): Promise<void>
}

class DataWriter {
    + writeData(ObservationKeeper,IConfig)
    - createObservation(keeperOfTheObservations,idSimplevalue,day,idLocation,quads,baseURL)
}

class main{

}

class PAAConverter {
    + convertAll(ObservationKeeper)
    - convertOne(SortedMap):Promise<SortedMap>
}

Data - DataWriter
Data -down- GeneralExtractor
Data -down- PAAConverter

ObservationKeeper -down- DataWriter
ObservationKeeper -down- GeneralExtractor 
ObservationKeeper - PAAConverter

ObservationKeeper -up- Data

main - Data
Data -down- IConfig
IConfig -down- GeneralExtractor

IConfig -up- main
@enduml